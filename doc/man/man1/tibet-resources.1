.TH "TIBET\-RESOURCES" "1" "March 2017" "" ""
.SH "NAME"
\fBtibet-resources\fR \- builds template/css/resource files and config entries
.SH SYNOPSIS
.P
tibet resources [\-\-build] [\-\-list] [<package\-opts>]
.SH DESCRIPTION
.P
Reflects on application resource requirements and builds rollup resources\.
.P
The \fBtibet resources\fP command is used to build JavaScript\-based versions of
.br
various resources such as templates, style sheets, JSON data files, etc\. The
.br
resulting files can be rolled up into build packages, significantly
.br
reducing the number of HTTP calls necessary to load application resources\.
.P
In addition to building loadable versions of resources this command will
.br
maintain the \fBresources\fP \fB<config/>\fP in your application's package file\. By
.br
updating the package this command ensures the \fBrollup\fP command will find all
.br
built resources and include them\.
.SH OPTIONS
.RS 0
.IP \(bu 2
\fB\-\-build\fP :
.br
Tell the command to actually build resources and update the application
.br
package with any missing resource entries\.
.IP \(bu 2
\fB\-\-list\fP :
.br
List but don't build the resources\. This is the default flag\.
.IP \(bu 2
\fB[package\-opts]\fP :
.br
Refers to valid options for a TIBET Package object\. These include \-\-package,
.br
\-\-config, \-\-phase, \-\-assets, etc\. The package#config defaults to
.br
\fB~app_cfg/main\.xml\fP and its default config (usually #base) so your typical
.br
configuration is built\. See help on the \fBtibet package\fP command for more
.br
information\.

.RE
.SH EXAMPLES
.SS Listing application resource data
.P
By default the \fBtibet resources\fP command will list concrete resources it
.br
believes should be processed and will display an example of the \fB<config/>\fP
.br
entries it would build:
.P
.RS 2
.nf
$ tibet resources
Loading TIBET via PhantomJS 2\.1\.1 at June 30, 2016 at 09:45:14 MDT
TIBET loaded in 3064 ms\. Starting execution\.
Filtering 927 potential resources\.\.\.
Found 3 concrete resources\.\.\.
Configuration Entries (not saved):
<config id="resources" if="boot\.phase_two">
    <script src="~app_build/tags\.APP\.hello\.app\.xhtml\.js"/>
    <script src="~app_build/tags\.APP\.hello\.app\.css\.js"/>
    <script src="~app_build/tags\.test\.less\.js"/>
</config>
.fi
.RE
.SS Building application resources
.P
To build resources add the \fB\-\-build\fP flag:
.P
.RS 2
.nf
$ tibet resources \-\-build
Loading TIBET via PhantomJS 2\.1\.1 at June 30, 2016 at 09:43:01 MDT
TIBET loaded in 3680 ms\. Starting execution\.
Filtering 927 potential resources\.\.\.
Building 3 concrete resources\.\.\.
~app_src/tags/APP\.hello\.app\.xhtml
~app_src/tags/APP\.hello\.app\.css
~app_src/tags/test\.less
Writing package resource entries\.\.\.
<script src="~app_build/tags\.APP\.hello\.app\.xhtml\.js"/> (added)
<script src="~app_build/tags\.APP\.hello\.app\.css\.js"/> (added)
<script src="~app_build/tags\.test\.css\.js"/> (added)
.fi
.RE
.P
Note that if you build multiple times the \fB(added)\fP qualifier will show
.br
\fB(exists)\fP for any resources the package already contains\.
.SS Modularizing application resources
.P
For larger applications or applications which need to load resources in
.br
different bundles you can use nested \fB<config/>\fP elements\. To accomplish
.br
this run the \fBtibet resources\fP command once to load the initial set of
.br
resources, then partition them into separate \fB<config/>\fP elements:
.P
.RS 2
.nf
<config id="resources" if="boot\.phase_two boot\.resourced">
    <config ref="startup\-resources"/>
    <config ref="extra\-resources"/>
</config>

<config id="startup\-resources">
    <script src="~app_build/tags\.APP\.hello\.app\.xhtml\.js"/>
    <script src="~app_build/tags\.APP\.hello\.app\.css\.js"/>
</config>

<config id="extra\-resources">
    <script src="~app_build/tags\.APP\.hello\.specialsauce\.xhtml\.js"/>
    <script src="~app_build/tags\.APP\.hello\.specialsauce\.css\.js"/>
</config>
.fi
.RE
.P
When you use a configuration like the one above TIBET will automatically
.br
recognize that nested entries do not need to be added\.
.P
You can then refer to the individual <config/> elements in your other
.br
package configurations to adjust loading as you require\.
.SH SEE ALSO
.RS 0
.IP \(bu 2
package(1)
.IP \(bu 2
rollup(1)

.RE

